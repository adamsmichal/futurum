{"version":3,"sources":["webpack:///./src/components/general/GeneralArticle.tsx","webpack:///./src/pages/localization.tsx"],"names":["ArticleWrapper","styled","article","theme","breakpoints","desktop","ArticleImage","img","TextWrapper","div","space","ml","l","phone","xl","xxl","ArticleTitle","h2","colors","greeyH","fontWeights","bold","tabletLarge","ArticleText","p","light","greeyP","GeneralArticle","image","text","title","className","src","alt","LocalizationPageWrapper","main","fontFamily","query","LocalizationPage","data","allMdx","nodes","map","frontmatter","featureImage","childImageSharp","original","key"],"mappings":"6IAGMA,EAAiBC,IAAOC,QAAV,oFAAGD,CAAH,iOAGmB,qBAAGE,MAC9BC,YAAYC,WAalBC,EAAeL,IAAOM,IAAV,kFAAGN,CAAH,yEACqB,qBAAGE,MAC9BC,YAAYC,WAMlBG,EAAcP,IAAOQ,IAAV,iFAAGR,CAAH,6FACJ,qBAAGE,MAAkBO,MAAMC,MAAM,qBAAGR,MAAkBO,MAAME,KAElC,qBAAGT,MAC9BC,YAAYS,SACT,qBAAGV,MAAkBO,MAAMI,MAAM,qBAAGX,MAAkBO,MAAMK,OAKrEC,EAAef,IAAOgB,GAAV,kFAAGhB,CAAH,uOAEP,qBAAGE,MAAkBe,OAAOC,UAEtB,qBAAGhB,MAAkBiB,YAAYC,QAIX,qBAAGlB,MAC9BC,YAAYS,SACH,qBAAGV,MAAkBO,MAAME,KAIT,qBAAGT,MAC9BC,YAAYkB,eAKlBC,EAActB,IAAOuB,EAAV,iFAAGvB,CAAH,uOAEA,qBAAGE,MAAkBiB,YAAYK,SACvC,qBAAGtB,MAAkBe,OAAOQ,UAEA,qBAAGvB,MAC9BC,YAAYS,SAIe,qBAAGV,MAC9BC,YAAYkB,eAKe,qBAAGnB,MAC9BC,YAAYC,WA4BTsB,IAhBwC,SAAC,GAIlD,IAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,kBAAC9B,EAAD,KACE,kBAACM,EAAD,CAAcyB,UAAU,QAAQC,IAAKJ,EAAOK,IAAI,QAChD,kBAACzB,EAAD,CAAauB,UAAU,QACrB,kBAACf,EAAD,KAAec,GACf,kBAACP,EAAD,KAAcM,O,4LCvFhBK,EAA0BjC,IAAOkC,KAAV,wFAAGlC,CAAH,sBACZ,qBAAGE,MAAkBiC,WAAWD,QA6BpCE,EAAQ,aAwBNC,UAlDoB,WACjC,IAAMC,EAAO,OAEb,OACE,oCACE,kBAAC,IAAD,CAAepC,MAAOA,KACpB,kBAAC,IAAD,MACA,kBAAC+B,EAAD,KACE,kBAAC,IAAD,CAAKJ,MAAM,gBACVS,EAAKC,OAAOC,MAAMC,KACjB,oBAAGC,YAAeb,EAAlB,EAAkBA,MAAOc,EAAzB,EAAyBA,aAAcf,EAAvC,EAAuCA,KAAvC,OACE,kBAAC,IAAD,CACED,MAAOgB,EAAaC,gBAAgBC,SAASd,IAC7CF,MAAOA,EACPD,KAAMA,EACNkB,IAAKjB,QAKb,kBAAC,IAAD,U","file":"component---src-pages-localization-tsx-83068786515a71851d8c.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ArticleWrapper = styled.article`\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.desktop}) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-template-areas: \"image text\";\r\n\r\n    & :nth-child(2n) {\r\n      grid-template-areas: \"text image\";\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleImage = styled.img`\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.desktop}) {\r\n    width: 50vw;\r\n    grid-area: image;\r\n  }\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: ${({ theme }) => theme.space.ml} ${({ theme }) => theme.space.l};\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.phone}) {\r\n    padding: ${({ theme }) => theme.space.xl} ${({ theme }) => theme.space.xxl};\r\n    grid-area: text;\r\n  }\r\n`;\r\n\r\nconst ArticleTitle = styled.h2`\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.greeyH};\r\n  font-size: 2.3rem;\r\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.phone}) {\r\n    margin-bottom: ${({ theme }) => theme.space.l};\r\n    font-size: 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.tabletLarge}) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nconst ArticleText = styled.p`\r\n  font-size: 1.4rem;\r\n  font-weight: ${({ theme }) => theme.fontWeights.light};\r\n  color: ${({ theme }) => theme.colors.greeyP};\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.phone}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.tabletLarge}) {\r\n    font-size: 3rem;\r\n    line-height: 40px;\r\n  }\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ninterface IGeneralArticleProps {\r\n  image: string;\r\n  text: string;\r\n  title: string;\r\n  path?: string;\r\n}\r\n\r\nconst GeneralArticle: React.FC<IGeneralArticleProps> = ({\r\n  image,\r\n  text,\r\n  title,\r\n}) => {\r\n  return (\r\n    <ArticleWrapper>\r\n      <ArticleImage className=\"image\" src={image} alt=\"map\" />\r\n      <TextWrapper className=\"text\">\r\n        <ArticleTitle>{title}</ArticleTitle>\r\n        <ArticleText>{text}</ArticleText>\r\n      </TextWrapper>\r\n    </ArticleWrapper>\r\n  );\r\n};\r\n\r\nexport default GeneralArticle;\r\n","import React from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport SEO from \"../components/general/Seo\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { theme } from \"../../src/assets/styles/theme\";\r\n\r\nimport Navigation from \"../components/general/Navigation\";\r\nimport Footer from \"../components/general/Footer\";\r\nimport GeneralArticle from \"../components/general/GeneralArticle\";\r\n\r\nconst LocalizationPageWrapper = styled.main`\r\n  font-family: ${({ theme }) => theme.fontFamily.main};\r\n`;\r\n\r\nconst LocalizationPage: React.FC = () => {\r\n  const data = useStaticQuery(query);\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Navigation />\r\n        <LocalizationPageWrapper>\r\n          <SEO title=\"Lokalizacja\" />\r\n          {data.allMdx.nodes.map(\r\n            ({ frontmatter: { title, featureImage, text } }) => (\r\n              <GeneralArticle\r\n                image={featureImage.childImageSharp.original.src}\r\n                title={title}\r\n                text={text}\r\n                key={title}\r\n              />\r\n            )\r\n          )}\r\n        </LocalizationPageWrapper>\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMdx(\r\n      filter: { frontmatter: { filter: { in: \"localizationPage\" } } }\r\n      sort: { fields: frontmatter___order }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          filter\r\n          featureImage {\r\n            childImageSharp {\r\n              original {\r\n                src\r\n              }\r\n            }\r\n          }\r\n          text\r\n          title\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LocalizationPage;\r\n"],"sourceRoot":""}